(defun rat-this-file (arg)
  "Run rat.rb on this file"
  (interactive "P")
  (let ((filename (file-name-nondirectory (buffer-file-name))))
    (if (not (string-match "\\(.*\\)\\.[tg]\\.cpp" filename))
        (message "not a test driver")
      (let* ((project-root (projectile-project-root))
             (default-cmd (format "rat.rb --timeout 10 %s --no-color" (match-string 1 filename)))
             (test-cmd (projectile-maybe-read-command arg default-cmd "Test command: "))
             (default-directory project-root))
        (puthash project-root test-cmd projectile-test-cmd-map)
        (save-some-buffers (not compilation-ask-about-save)
                           (lambda ()
                             (projectile-project-buffer-p (current-buffer)
                                                          project-root)))
        (projectile-run-compilation test-cmd)))))

(add-hook 'c-mode-common-hook
          '(lambda ()
             (define-key c-mode-map "\C-c\C-s" nil)
             (define-key c-mode-map "\C-c\C-b" nil)
             (define-key c++-mode-map "\C-c\C-s" nil)
             (define-key c++-mode-map "\C-c\C-b" nil)
             (define-key c++-mode-map (kbd "<C-S-f12>") 'rat-this-file)))
